name: Deployment

on:
  push:
    branches:
      - master

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write
    steps:
      - name: Check out the source code
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3.0.2

      - name: Retrieve tags
        run: git fetch --unshallow --tags

      - name: Setup Node.js environment
        uses: actions/setup-node@eeb10cff27034e7acf239c5d29f62154018672fd # tag=v3.3.0
        with:
          node-version: lts/*
          cache: npm

      - name: Install dependencies
        run: npm ci --ignore-scripts
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run postinstall scripts
        run: npm rebuild && npm run prepare --if-present

      - name: Build
        run: npm run build

      - name: Save artifacts
        uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8 # tag=v3
        with:
          path: ./build/
          name: build

      - name: Start deployment
        uses: chrnorm/deployment-action@1b599fe41a0ef1f95191e7f2eec4743f2d7dfc48 # tag=v2.0.3
        id: deployment
        with:
          token: "${{ github.token }}"
          environment: production

      - name: Deploy
        env:
          DEPLOY_TARGET: ${{ secrets.DEPLOY_TARGET }}
          RSYNC_PASSWORD: ${{ secrets.RSYNC_PASSWORD }}
        run: rsync -avHz --ignore-times build/ $DEPLOY_TARGET

      - name: Update deployment status (success)
        if: success()
        uses: chrnorm/deployment-status@07b3930847f65e71c9c6802ff5a402f6dfb46b86 # tag=v2.0.0
        with:
          token: "${{ github.token }}"
          state: "success"
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}

      - name: Update deployment status (failure)
        if: failure()
        uses: chrnorm/deployment-status@07b3930847f65e71c9c6802ff5a402f6dfb46b86 # tag=v2.0.0
        with:
          token: "${{ github.token }}"
          state: "failure"
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}
